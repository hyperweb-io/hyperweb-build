// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schemaExtractorPlugin should extract a basic contract with public and private methods 1`] = `
{
  "decorators": [],
  "methods": [],
  "state": {
    "properties": {
      "count": {
        "type": "number",
      },
      "startCoin": {
        "properties": {
          "amount": {
            "type": "string",
          },
          "denom": {
            "type": "string",
          },
        },
        "type": "object",
      },
      "tokens": {
        "items": {
          "properties": {
            "amount": {
              "type": "string",
            },
            "denom": {
              "type": "string",
            },
          },
          "type": "object",
        },
        "type": "array",
      },
    },
    "type": "object",
  },
}
`;

exports[`schemaExtractorPlugin should extract decorators and state from source 1`] = `
{
  "decorators": [
    {
      "args": [],
      "location": {
        "column": 3,
        "file": "class.ts",
        "line": 16,
      },
      "name": "external",
      "targetName": "getCount",
      "targetType": "method",
    },
    {
      "args": [],
      "location": {
        "column": 3,
        "file": "class.ts",
        "line": 17,
      },
      "name": "admin",
      "targetName": "getCount",
      "targetType": "method",
    },
    {
      "args": [],
      "location": {
        "column": 3,
        "file": "class.ts",
        "line": 23,
      },
      "name": "internal",
      "targetName": "increment",
      "targetType": "method",
    },
    {
      "args": [],
      "location": {
        "column": 3,
        "file": "class.ts",
        "line": 24,
      },
      "name": "admin",
      "targetName": "increment",
      "targetType": "method",
    },
    {
      "args": [],
      "location": {
        "column": 3,
        "file": "class.ts",
        "line": 30,
      },
      "name": "creator",
      "targetName": "decrement",
      "targetType": "method",
    },
    {
      "args": [
        "debug",
        "level",
      ],
      "location": {
        "column": 3,
        "file": "index.ts",
        "line": 4,
      },
      "name": "permission",
      "targetName": "fetchData",
      "targetType": "method",
    },
    {
      "args": [],
      "location": {
        "column": 3,
        "file": "index.ts",
        "line": 5,
      },
      "name": "performance",
      "targetName": "fetchData",
      "targetType": "method",
    },
  ],
  "methods": [
    {
      "name": "fetchData",
      "parameters": [],
      "returnType": {
        "properties": {
          "__@toStringTag@159": {
            "type": "string",
          },
          "catch": {
            "type": "any",
          },
          "finally": {
            "type": "any",
          },
          "then": {
            "type": "any",
          },
        },
        "type": "object",
      },
    },
  ],
  "state": {
    "properties": {
      "count": {
        "type": "any",
      },
    },
    "type": "object",
  },
}
`;

exports[`schemaExtractorPlugin should extract methods and state from classes inheritance-contract 1`] = `
{
  "decorators": [],
  "methods": [
    {
      "name": "increment",
      "parameters": [],
      "returnType": {
        "type": "any",
      },
    },
    {
      "name": "baseMethod",
      "parameters": [],
      "returnType": {
        "type": "any",
      },
    },
  ],
  "state": {
    "properties": {
      "count": {
        "type": "number",
      },
    },
    "type": "object",
  },
}
`;

exports[`schemaExtractorPlugin should extract methods from classes public methods 1`] = `
{
  "decorators": [],
  "methods": [
    {
      "name": "increment",
      "parameters": [],
      "returnType": {
        "type": "any",
      },
    },
    {
      "name": "addToken",
      "parameters": [
        {
          "name": "denom",
          "type": {
            "type": "string",
          },
        },
        {
          "name": "amount",
          "type": {
            "type": "string",
          },
        },
      ],
      "returnType": {
        "type": "any",
      },
    },
    {
      "name": "removeToken",
      "parameters": [
        {
          "name": "index",
          "type": {
            "type": "number",
          },
        },
      ],
      "returnType": {
        "type": "any",
      },
    },
  ],
  "state": {
    "properties": {
      "count": {
        "type": "number",
      },
      "startCoin": {
        "properties": {
          "amount": {
            "type": "string",
          },
          "denom": {
            "type": "string",
          },
        },
        "type": "object",
      },
      "tokens": {
        "items": {
          "properties": {
            "amount": {
              "type": "string",
            },
            "denom": {
              "type": "string",
            },
          },
          "type": "object",
        },
        "type": "array",
      },
    },
    "type": "object",
  },
}
`;
