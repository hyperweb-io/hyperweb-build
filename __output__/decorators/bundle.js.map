{
  "version": 3,
  "sources": ["../../__fixtures__/decorators/src/class.ts", "../../__fixtures__/decorators/src/object.ts", "../../__fixtures__/decorators/src/index.ts"],
  "sourcesContent": ["import { BigNumber } from \"jsd-std\";\n\n// Permission decorators\nexport const admin = (target: any, propertyKey: string, descriptor: PropertyDescriptor) => descriptor;\nexport const creator = (target: any, propertyKey: string, descriptor: PropertyDescriptor) => descriptor;\nexport interface State {\n  count: BigNumber;\n}\nexport class Counter {\n  private state: State;\n  constructor(initialState: State) {\n    this.state.count = initialState;\n  }\n\n  // Public by default (no decorator needed)\n  public getCount(): BigNumber {\n    return this.state.count;\n  }\n\n  // Only admin and creator can increment\n  public increment(amount: BigNumber): void {\n    this.state.count = this.state.count.add(amount);\n  }\n\n  // Only creator can decrement\n  public decrement(amount: BigNumber): void {\n    if (this.state.count.lt(amount)) {\n      throw new Error(\"Count cannot be negative\");\n    }\n    this.state.count = this.state.count.sub(amount);\n  }\n}", "import { BigNumber } from \"jsd-std\";\n\ninterface State {\n  count: BigNumber;\n}\n\n// Core contract logic\nexport const start = (initialCount: BigNumber) => {\n  let state: State = {\n    count: initialCount\n  };\n\n  // HOW TO EVEN DO DECORATORS\n  return {\n    getCount: () => state.count,\n    \n    increment: (amount: BigNumber) => {\n      state.count = state.count.add(amount);\n      return state.count;\n    },\n    \n    decrement: (amount: BigNumber) => {\n      if (state.count.lt(amount)) {\n        throw new Error(\"Count cannot be negative\");\n      }\n      state.count = state.count.sub(amount);\n      return state.count;\n    }\n  };\n};", "export * from './class';\nexport * from './object';\nclass MyClass {\n  async fetchData() {\n    // ... method implementation\n  }\n}"],
  "mappings": ";AAGO,IAAM,QAAQ,CAAC,QAAa,aAAqB,eAAmC;AACpF,IAAM,UAAU,CAAC,QAAa,aAAqB,eAAmC;AAItF,IAAM,UAAN,MAAc;AAAA,EACX;AAAA,EACR,YAAY,cAAqB;AAC/B,SAAK,MAAM,QAAQ;AAAA,EACrB;AAAA;AAAA,EAGO,WAAsB;AAC3B,WAAO,KAAK,MAAM;AAAA,EACpB;AAAA;AAAA,EAGO,UAAU,QAAyB;AACxC,SAAK,MAAM,QAAQ,KAAK,MAAM,MAAM,IAAI,MAAM;AAAA,EAChD;AAAA;AAAA,EAGO,UAAU,QAAyB;AACxC,QAAI,KAAK,MAAM,MAAM,GAAG,MAAM,GAAG;AAC/B,YAAM,IAAI,MAAM,0BAA0B;AAAA,IAC5C;AACA,SAAK,MAAM,QAAQ,KAAK,MAAM,MAAM,IAAI,MAAM;AAAA,EAChD;AACF;;;ACxBO,IAAM,QAAQ,CAAC,iBAA4B;AAChD,MAAI,QAAe;AAAA,IACjB,OAAO;AAAA,EACT;AAGA,SAAO;AAAA,IACL,UAAU,MAAM,MAAM;AAAA,IAEtB,WAAW,CAAC,WAAsB;AAChC,YAAM,QAAQ,MAAM,MAAM,IAAI,MAAM;AACpC,aAAO,MAAM;AAAA,IACf;AAAA,IAEA,WAAW,CAAC,WAAsB;AAChC,UAAI,MAAM,MAAM,GAAG,MAAM,GAAG;AAC1B,cAAM,IAAI,MAAM,0BAA0B;AAAA,MAC5C;AACA,YAAM,QAAQ,MAAM,MAAM,IAAI,MAAM;AACpC,aAAO,MAAM;AAAA,IACf;AAAA,EACF;AACF;;;AC3BA,IAAM,UAAN,MAAc;AAAA,EACZ,MAAM,YAAY;AAAA,EAElB;AACF;",
  "names": []
}
